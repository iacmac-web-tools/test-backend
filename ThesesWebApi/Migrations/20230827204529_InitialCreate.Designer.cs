// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ThesesWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230827204529_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ThesesDomain.Models.PersonResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("ThesisFormId")
                        .HasColumnType("integer");

                    b.Property<string>("Workplace")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("ThesisFormId");

                    b.ToTable("person");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("contactEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("character varying(5000)");

                    b.Property<int>("mainAuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("topic")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("mainAuthorId");

                    b.ToTable("form");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisResource", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<string>("contactEmail")
                        .HasColumnType("text");

                    b.Property<string>("content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("mainAuthorId")
                        .HasColumnType("integer");

                    b.Property<int?>("otherAuthorsId")
                        .HasColumnType("integer");

                    b.Property<string>("topic")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("mainAuthorId");

                    b.HasIndex("otherAuthorsId");

                    b.ToTable("theses");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisTableItemResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ThesisTableItemResourceDataTableResultId")
                        .HasColumnType("integer");

                    b.Property<string>("contactEmail")
                        .HasColumnType("text");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("mainAuthor")
                        .HasColumnType("text");

                    b.Property<string>("topic")
                        .HasColumnType("text");

                    b.Property<DateTime>("updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ThesisTableItemResourceDataTableResultId");

                    b.ToTable("tableItemResource");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisTableItemResourceDataTableResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("page")
                        .HasColumnType("integer");

                    b.Property<int>("pageSize")
                        .HasColumnType("integer");

                    b.Property<int>("totalItems")
                        .HasColumnType("integer");

                    b.Property<int>("totalPages")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("dataTableResults");
                });

            modelBuilder.Entity("ThesesDomain.Models.PersonResource", b =>
                {
                    b.HasOne("ThesesDomain.Models.ThesisForm", null)
                        .WithMany("otherAuthors")
                        .HasForeignKey("ThesisFormId");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisForm", b =>
                {
                    b.HasOne("ThesesDomain.Models.PersonResource", "mainAuthor")
                        .WithMany()
                        .HasForeignKey("mainAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainAuthor");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisResource", b =>
                {
                    b.HasOne("ThesesDomain.Models.PersonResource", "mainAuthor")
                        .WithMany()
                        .HasForeignKey("mainAuthorId");

                    b.HasOne("ThesesDomain.Models.PersonResource", "otherAuthors")
                        .WithMany()
                        .HasForeignKey("otherAuthorsId");

                    b.Navigation("mainAuthor");

                    b.Navigation("otherAuthors");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisTableItemResource", b =>
                {
                    b.HasOne("ThesesDomain.Models.ThesisTableItemResourceDataTableResult", null)
                        .WithMany("items")
                        .HasForeignKey("ThesisTableItemResourceDataTableResultId");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisForm", b =>
                {
                    b.Navigation("otherAuthors");
                });

            modelBuilder.Entity("ThesesDomain.Models.ThesisTableItemResourceDataTableResult", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
